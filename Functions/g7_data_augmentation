import os
import numpy as np
from keras.preprocessing.image import ImageDataGenerator
from PIL import Image


def data_augmentation(train_path: str, rotation_range: int=40, width_shift_range:float=.2, 
                      height_shift_range: float=.2, shear_range: float=.2, zoom_range: float=.2,
                      horizontal_flip: bool=True, nb_img: int=10):
    
    classes = os.listdir(train_path)
    
    datagen = ImageDataGenerator(
            rotation_range=rotation_range,
            width_shift_range=width_shift_range,
            height_shift_range=height_shift_range,
            shear_range=shear_range,
            zoom_range=zoom_range,
            horizontal_flip=horizontal_flip,
            fill_mode='nearest')
    
    for class_ in classes:
        picts = os.listdir(train_path + '/' + class_)
        print(class_)
        
        for pict in picts:
            img = Image.open(train_path + '/' + class_ + '/' + pict)
            img = np.array(img)
            img = img.reshape((1,) + img.shape)
            i=0
            
            for batch in datagen.flow(img, batch_size=1, 
                                      save_to_dir=train_path, save_prefix=class_ + '/' + class_, save_format='jpeg'):
                i += 1
                if i > nb_img:
                    break  # otherwise the generator would loop indefinitely
